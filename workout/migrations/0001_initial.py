# Generated by Django 5.0.2 on 2024-02-17 22:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Bone name')),
                ('cover', models.FileField(upload_to='images/bones/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['svg'])])),
                ('description', models.TextField(verbose_name='Some description of the bone')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JointType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MovimentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Joint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Joint name')),
                ('cover', models.FileField(upload_to='images/joints/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['svg'])])),
                ('description', models.TextField(blank=True, verbose_name='Some description of the joint')),
                ('bones', models.ManyToManyField(to='workout.bone')),
                ('joint_type', models.ManyToManyField(to='workout.jointtype')),
                ('allowed_movements', models.ManyToManyField(to='workout.movimenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Muscle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Muscle name')),
                ('cover', models.FileField(upload_to='images/muscles/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['svg'])])),
                ('description', models.TextField(blank=True, verbose_name='Some description of the muscle')),
                ('action', models.ManyToManyField(to='workout.movimenttype')),
                ('insertion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insertion_bone', to='workout.bone')),
                ('joints', models.ManyToManyField(to='workout.joint')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bone_origin', to='workout.bone')),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.FileField(upload_to='images/exercises/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['svg'])])),
                ('name', models.CharField(max_length=120, verbose_name='Exercise name')),
                ('description', models.TextField(verbose_name='Exercise description')),
                ('difficulty', models.CharField(choices=[('E', 'Easy'), ('M', 'Medium'), ('H', 'Hard')], max_length=1, verbose_name='Select the difficulty')),
                ('muscles', models.ManyToManyField(to='workout.muscle')),
            ],
        ),
        migrations.AddField(
            model_name='bone',
            name='muscles',
            field=models.ManyToManyField(blank=True, to='workout.muscle'),
        ),
    ]
